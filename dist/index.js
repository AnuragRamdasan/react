"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const c=require("react");class U{constructor({appId:t,apiKey:n,customerApiToken:s,apiUrl:o="https://appapi.heymantle.com/v1"}){if(!t)throw new Error("MantleClient appId is required");if(typeof window<"u"&&n)throw new Error("MantleClient apiKey should never be used in the browser");this.appId=t,this.apiKey=n,this.customerApiToken=s,this.apiUrl=o}async mantleRequest({path:t,method:n="GET",body:s}){try{const o=`${this.apiUrl}${t.startsWith("/")?"":"/"}${t}${s&&n==="GET"?`?${new URLSearchParams(s)}`:""}`;return await(await fetch(o,{method:n,headers:{"Content-Type":"application/json",Accept:"application/json","X-Mantle-App-Id":this.appId,...this.apiKey?{"X-Mantle-App-Api-Key":this.apiKey}:{},...this.customerApiToken?{"X-Mantle-Customer-Api-Token":this.customerApiToken}:{}},...s&&n!=="GET"&&{body:JSON.stringify(s)}})).json()}catch(o){throw console.error(`[mantleRequest] ${t} error: ${o.message}`),o}}async identify({platformId:t,myshopifyDomain:n,platform:s="shopify",accessToken:o,name:i,email:r,customFields:y,createdAt:h,rotateApiToken:d,tags:p,operators:b,address:S}){return await this.mantleRequest({path:"identify",method:"POST",body:{platformId:t,myshopifyDomain:n,platform:s,accessToken:o,name:i,email:r,customFields:y,createdAt:h,rotateApiToken:d,tags:p,operators:b,address:S}})}async getCustomer(t){return(await this.mantleRequest({path:"customer",...t?{body:{id:t}}:{}})).customer}async subscribe({planId:t,planIds:n,discountId:s,returnUrl:o,billingProvider:i,useSavedPaymentMethod:r=!1}){return await this.mantleRequest({path:"subscriptions",method:"POST",body:{planId:t,planIds:n,discountId:s,returnUrl:o,billingProvider:i,useSavedPaymentMethod:r}})}async cancelSubscription({cancelReason:t}={}){return await this.mantleRequest({path:"subscriptions",method:"DELETE",...t&&{body:{cancelReason:t}}})}async updateSubscription({id:t,cappedAmount:n}){return await this.mantleRequest({path:"subscriptions",method:"PUT",body:{id:t,cappedAmount:n}})}async sendUsageEvent({eventId:t,eventName:n,customerId:s,properties:o={}}){return await this.mantleRequest({path:"usage_events",method:"POST",body:{eventId:t,eventName:n,...s?{customerId:s}:{},properties:o}})}async sendUsageEvents({events:t}){return await this.mantleRequest({path:"usage_events",method:"POST",body:{events:t}})}async addPaymentMethod({returnUrl:t}){return await this.mantleRequest({path:"payment_methods",method:"POST",...t&&{body:{returnUrl:t}}})}async getUsageMetricReport({id:t,period:n,customerId:s}){return await this.mantleRequest({path:`usage_events/${t}/report`,body:{...n?{period:n}:{},...s?{customerId:s}:{}}})}async createHostedSession(t){const{type:n,config:s}=t;return(await this.mantleRequest({path:"hosted_sessions",method:"POST",body:{type:n,config:s}})).session}}const q={finalize:"finalize",setup:"setup",subscribe:"subscribe"};var F={MantleClient:U,SubscriptionConfirmType:q};const l={Annual:"ANNUAL",Every30Days:"EVERY_30_DAYS"},$={Public:"public",CustomerTag:"customerTag",ShopifyPlan:"shopifyPlan",Customer:"customer",Hidden:"hidden"},m={AmountPerInterval:"{{ amount }} per {{ interval }}",Back:"Back",Cancel:"Cancel",CancelConfirmation:"Are you sure you want to cancel your subscription?",CancelPlan:"Cancel plan",ChangePlan:"Change plan",CurrentPlan:"Current plan",CustomPlans:"Custom plans",CustomPlansDescription:"Plans tailored to your specific needs",DiscountAmount:"{{ amount }} discount",DiscountAmountExpired:"{{ amount }} discount expired",FreeTrialLength:"{{ trialDays }}-day free trial",Features:"Features",Month:"month",MonthShort:"mo",Monthly:"Monthly",NextBillingDate:"Next billing date",NotSubscribed:"You're not subscribed to a plan yet.",Year:"year",YearShort:"yr",Yearly:"Yearly",MostPopular:"Most popular",Per:"/",Plans:"Plans",Price:"Price",SelectPlan:"Select plan",SubscribeSuccessTitle:"Subscription successful",SubscribeSuccessBody:"Thanks for subscribing to our app!",Subscription:"Subscription",SubscriptionCancelled:"Subscription cancelled",UsageCharges:"Usage charges"},v=c.createContext(),O=({feature:e,count:t=0})=>(e==null?void 0:e.type)==="boolean"?e.value:(e==null?void 0:e.type)==="limit"?t<e.value||e.value===-1:!1,N=({appId:e,customerApiToken:t,apiUrl:n="https://appapi.heymantle.com/v1",children:s,i18n:o=m})=>{const i=new F.MantleClient({appId:e,customerApiToken:t,apiUrl:n}),[r,y]=c.useState(null),[h,d]=c.useState(!0),p=async()=>{try{d(!0);const a=await i.getCustomer();y(a)}catch(a){console.error("[MantleProvider] Error fetching customer: ",a)}finally{d(!1)}},b=async a=>{await i.sendUsageEvent(a)},S=async({usageId:a,period:u})=>await i.getUsageMetricReport({id:a,period:u}),w=async({planId:a,planIds:u,discountId:x,billingProvider:L,returnUrl:R,useSavedPaymentMethod:D=!1})=>await i.subscribe({planId:a,planIds:u,discountId:x,billingProvider:L,returnUrl:R,useSavedPaymentMethod:D}),C=async({cancelReason:a}={})=>await i.cancelSubscription({...a&&{cancelReason:a}}),E=async({returnUrl:a})=>await i.addPaymentMethod({returnUrl:a}),M=async({type:a,config:u})=>await i.createHostedSession({type:a,config:u});c.useEffect(()=>{t&&p()},[t]);const T=(r==null?void 0:r.plans)||[],A=r==null?void 0:r.subscription;return c.createElement(v.Provider,{value:{customer:r,subscription:A,plans:T,loading:h,i18n:{...m,...o},sendUsageEvent:b,getUsageReport:S,subscribe:w,cancelSubscription:C,addPaymentMethod:E,createHostedSession:M,isFeatureEnabled:({featureKey:a,count:u=0})=>r!=null&&r.features[a]?O({feature:r.features[a],count:u}):!1,limitForFeature:({featureKey:a})=>r!=null&&r.features[a]&&currentPlan.features[a].type==="limit"?r.features[a].value:-1,refetch:async()=>{await p()}}},s)},Y=()=>{const e=c.useContext(v);if(e===void 0)throw new Error("useMantle must be used within a MantleProvider");return e},g=e=>e.type==="boolean"&&e.value==!0||e.type==="limit"&&e.value!==0,_=(e,t)=>g(t)-g(e)||e.name.localeCompare(t.name),B=(e="USD")=>new Intl.NumberFormat("en-US",{style:"currency",currency:e,notation:"standard"}),k=(e,t="USD",n=!0)=>{let s=B(t).format(e);return n&&(s=s.replace(/\.00$/,"")),s},f=(e=l.Every30Days)=>{switch(e){case l.Annual:return"year";case l.Every30Days:default:return"month"}},P=(e=l.Every30Days)=>{switch(e){case l.Annual:return"yr";case l.Every30Days:default:return"mo"}},I=({interval:e=l.Every30Days,useShortFormPlanIntervals:t=!0})=>t?P(e):f(e),j=({plan:e,customFieldKey:t="recommended"})=>{var n;return!!((n=e.customFields)!=null&&n[t])},H=({plan:e,customFieldKey:t="buttonLabel"})=>{var n;return((n=e.customFields)==null?void 0:n[t])||m.SelectPlan},G=({plan:e})=>{var t;return((t=e.discounts)==null?void 0:t.length)>0?e.discounts.reduce((n,s)=>n.discountedAmount<s.discountedAmount?n:s):void 0},X=(e=4)=>e%4===0?{xs:6,sm:6,md:2,lg:3,xl:3}:e%3===0?{xs:6,sm:6,md:2,lg:4,xl:4}:e%2===0?{xs:6,sm:6,md:3,lg:6,xl:6}:e===1?{xs:6,sm:6,md:6,lg:12,xl:12}:{xs:6,sm:6,md:2,lg:4,xl:4},J=(e=4)=>e%4===0?4:e%3===0?3:e%2===0?2:e===1?1:4;exports.Labels=m;exports.MantleProvider=N;exports.PlanAvailability=$;exports.PlanInterval=l;exports.columnCount=J;exports.columnSpan=X;exports.customButtonLabel=H;exports.featureEnabled=g;exports.featureSort=_;exports.highestDiscount=G;exports.intervalLabel=I;exports.intervalLabelLong=f;exports.intervalLabelShort=P;exports.isRecommendedPlan=j;exports.money=k;exports.useMantle=Y;
