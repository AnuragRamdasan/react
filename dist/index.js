"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("react");class h{constructor({appId:n,customerApiToken:r,apiUrl:a="https://appapi.heymantle.com/v1"}){this.appId=n,this.customerApiToken=r,this.apiUrl=a}async mantleRequest({resource:n,method:r="GET",body:a}){return await(await fetch(`${this.apiUrl}/${n}`,{method:r,headers:{"Content-Type":"application/json",Accept:"application/json","X-Mantle-App-Id":this.appId,"X-Mantle-Customer-Api-Token":this.customerApiToken},...a&&{body:JSON.stringify(a)}})).json()}async getCustomer(){return(await this.mantleRequest({resource:"customer"})).customer}async subscribe({planId:n,returnUrl:r}){return await this.mantleRequest({resource:"subscriptions",method:"POST",body:{planId:n,returnUrl:r}})}async cancelSubscription(){return await this.mantleRequest({resource:"subscriptions",method:"DELETE"})}async updateSubscription({id:n,cappedAmount:r}){return await this.mantleRequest({resource:"subscriptions",method:"PUT",body:{id:n,cappedAmount:r}})}async sendUsageEvent({eventId:n,eventName:r,properties:a={}}){return await this.mantleRequest({resource:"usage_events",method:"POST",body:{event_id:n,event_name:r,properties:a}})}}const m=o.createContext(),w=({feature:e,count:n=0})=>(e==null?void 0:e.type)==="boolean"?e.value:(e==null?void 0:e.type)==="limit"?n<e.value||e.value===-1:!1,M=({appId:e,customerApiToken:n,apiUrl:r="https://appapi.heymantle.com/v1",children:a})=>{const u=new h({appId:e,customerApiToken:n,apiUrl:r}),[t,d]=o.useState(null),[y,c]=o.useState(!0),[v,b]=o.useState(null),C=async()=>{try{c(!0);const s=await u.getCustomer();d(s)}catch(s){b(s)}finally{c(!1)}};o.useEffect(()=>{C()},[]);const l=(t==null?void 0:t.plans)||[],i=t==null?void 0:t.subscription,p=(i==null?void 0:i.plan)||l.find(s=>s.amount===0&&s.public);return o.createElement(m.Provider,{value:{customer:t,subscription:i,currentPlan:p,plans:l,loading:y,error:v,client:u,isFeatureEnabled:({featureKey:s,count:S=0})=>t!=null&&t.features[s]?w(t.features[s]):!1,limitForFeature:({featureKey:s})=>t!=null&&t.features[s]&&p.features[s].type==="limit"?t.features[s].value:-1,refetch:async()=>{await fetchCurrentCustomer()}}},a)},E=()=>{const e=o.useContext(m);if(e===void 0)throw new Error("useMantle must be used within a MantleProvider");return e};module.exports={};exports.MantleClient=h;exports.MantleProvider=M;exports.useMantle=E;
